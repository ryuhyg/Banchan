<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="feedback">

	<!-- Start 광태 -->
	<!-- End 광태 -->

	<!-- Start 우정 -->
	<!-- End 우정 -->

	<!-- Start 정훈 -->
	<!-- End 정훈 -->

	<!-- Start 향걸 -->
	<!-- End 향걸 -->

	<!-- Start 지원 -->
	<!-- End 지원 -->

	<!-- Start 영민 -->
	<!-- End 영민 -->

	<!-- Start 윤주 -->
	<insert id="reviewRegister" parameterType="reviewVO">
		insert into review(rev_no,score,rev_postdate,rev_content,food_no,mem_id)
		values(review_seq.nextval,#{score},sysdate,#{revContent},#{foodNo},#{memId})
	</insert>
	<update id="updateSellerScore" parameterType="string">
		update seller set seller_score=
		(select round(sum(score)/count(*),1)
		from review r,food f
		where f.mem_id=#{value} and r.food_no=f.food_no
		)
		where mem_id=#{value}
	</update>
	<select id="getReviewListByFoodSellNo" parameterType="map"
		resultType="reviewVO" >
		select r.rev_no,r.score,r.rev_postdate,r.rev_content,r.mem_id
		from(
			select row_number() over(order by rev_no desc) as
			rnum,rev_no,score,rev_postdate,rev_content,food_no,mem_id
			from review
			)r,food_sell fs
		where fs.food_sell_no=#{foodSellNo} and fs.food_no=r.food_no and
				r.rnum between #{startRowNumber} and #{endRowNumber}
		order by r.rev_postdate desc
	</select>
	<select id="getAllReviewCountByFoodSellNo" parameterType="string" resultType="int">
		select count(*)
		from review r, food_sell fs
		where fs.food_sell_no=#{value} and r.food_no=fs.food_no

	</select>
	<!-- End 윤주 -->
</mapper>










